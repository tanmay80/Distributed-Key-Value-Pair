version: '3'

services:
  container1:
    image: my-typescript-app
    container_name: node1
    networks:
      my_network:
        ipv4_address: 10.5.0.2
    entrypoint: ["/bin/sh", "-c", "node dist/server.js && tail -f /dev/null"]
    ports:
      - "8081:8080"
    environment:
    - PORT=8081
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock  # Docker socket mount

  container2:
    image: my-typescript-app
    container_name: node2
    networks:
      my_network:
        ipv4_address: 10.5.0.3
    entrypoint: ["/bin/sh", "-c", "node dist/server.js && tail -f /dev/null"]
    ports:
      - "8082:8080"
    environment:
      - PORT=8082
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock  # Docker socket mount

  container3:
    image: my-typescript-app
    container_name: node3
    networks:
      my_network:
        ipv4_address: 10.5.0.4
    entrypoint: ["/bin/sh", "-c", "node dist/server.js && tail -f /dev/null"]
    ports:
      - "8083:8080"
    environment:
      - PORT=8083
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock  # Docker socket mount

  container4:
    image: my-typescript-app
    container_name: node4
    networks:
      my_network:
        ipv4_address: 10.5.0.5
    entrypoint: ["/bin/sh", "-c", "node dist/server.js && tail -f /dev/null"]
    ports:
      - "8084:8080"
    environment:
      - PORT=8084
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock  # Docker socket mount

networks:
  my_network:
    driver: bridge
    ipam:
      config:
        - subnet: 10.5.0.0/24
          gateway: 10.5.0.1
